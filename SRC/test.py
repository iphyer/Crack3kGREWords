# -*- coding: utf-8 -*-
#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.5
# In conjunction with Tcl version 8.6
#    Mar 25, 2015 08:41:08 PM
# 2018.06.06 LIUYOU2015 changed this file to remove the problem of txt encoding.
import sys
import sqlite3
import codecs

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import ZYNM3k_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    root.title('再要你命3默写考试')
    geom = "600x450+701+296"
    root.geometry(geom)
    w = New_Toplevel_1 (root)
    ZYNM3k_support.init(root, w)
    root.mainloop()

w = None
def create_New_Toplevel_1(root, param=None):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    w.title('New_Toplevel_1')
    geom = "600x450+701+296"
    w.geometry(geom)
    w_win = New_Toplevel_1 (w)
    ZYNM3k_support.init(w, w_win, param)
    return w_win

def destroy_New_Toplevel_1():
    global w
    w.destroy()
    w = None


class New_Toplevel_1:
    def __init__(self, master=None):
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font10 = "-family {DejaVu Sans} -size 10 -weight normal -slant"  \
            " roman -underline 0 -overstrike 0"
        font11 = "-family {DejaVu Sans} -size 24 -weight normal -slant"  \
            " roman -underline 0 -overstrike 0"
        master.configure(highlightcolor="black")


        self.Message1 = Message(master)
        self.Message1.place(relx=0.2, rely=0.47, relheight=0.38, relwidth=0.64)
        self.Message1.configure(font=font10)
        self.Message1.configure(text='''请输入你希望默写的list数字(1-31)，格式1,2,3,使用逗号分隔，随后点击RUN按钮。

程序会生成相应的txt文件，你可以在word或者任何编辑器中打开。

文件分成两个，一个是英文(随机乱序)，一个是对应的中文解释。

有问题请联系:iphyer@163.com''')
        self.Message1.configure(width=385)
        
        content=StringVar()
        self.Entry1 = Entry(master)
        self.Entry1.place(relx=0.28, rely=0.22, relheight=0.05, relwidth=0.41)
        self.Entry1.configure(background="white")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(selectbackground="#c4c4c4")
        self.Entry1.configure(textvariable=content)

        self.Label1 = Label(master)
        self.Label1.place(relx=0.22, rely=0.04, height=42, width=340)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(font=font11)
        self.Label1.configure(text='''再要你命3000默写程序''')

        self.Button1 = Button(master)
        self.Button1.place(relx=0.45, rely=0.33, height=27, width=52)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(text='''RUN''')
        self.Button1.configure(command=self.two_things)

        


        
    def two_things(self):
        generate_txt(self)
        new_window(self)

        
 
def input_reforming(s):
    a=s.split(',')
    sql_begin="SELECT Column1 AS Eng,Column2 AS Chn, random() AS r FROM list"
    sql_repeat=" UNION ALL SELECT Column1 AS Eng,Column2 AS Chn, random() AS r FROM list"
    sql_last=" ORDER BY r"
    
    for i in range(0,len(a)):
        if i == 0:
            sql_whole=sql_begin+a[i]
        else:
            sql_whole=sql_whole+sql_repeat+a[i]
    
    sql_whole=sql_whole+sql_last
    return sql_whole

def writefile(rows):
    file_eng= codecs.open ("Eng.txt","w+","utf-8")
    file_chn= codecs.open ("Chn.txt","w+","utf-8")
    for row in rows:
        file_eng.write("%s  \n" % row[0])
        file_chn.write("%s  \n" % row[1])
    file_eng.close()
    file_chn.close()
    
def new_window(self):
    top = Toplevel()
    top.title('完成')
    msg = Message(top, text='完成')
    msg.pack()
    button = Button(top, text="关闭", command=top.destroy)
    button.pack()

def generate_txt(self):
    s = self.Entry1.get()
    sql=input_reforming(s)
    conn = sqlite3.connect('3k.sqlite')
    print "Opened database successfully";
    cu = conn.cursor()
    cu.execute(sql)
    rows = cu.fetchall()
    writefile(rows)
    print 'Done'   


if __name__ == '__main__':
    vp_start_gui()


